name: PHP-CICD

on:
  push:
    branches:
      - "master"
      - "production"
      - "release/*"

env:
  DOCKER_REGISTRY: docker.io # Replace by "docker.pkg.github.com" for github registry
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} # Replace by ${{ github.actor }} for github registry
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} # Replace by ${{ github.token }} for github registry
  PHP_IMAGE: ${{ secrets.DOCKER_USERNAME }}/gh-php # Replace by ${{ github.repository }}/gh-php for github registry
  PHP_TEST_IMAGE: ${{ secrets.DOCKER_USERNAME }}/gh-php-test # Replace by ${{ github.repository }}/gh-php-test for github registry
  SLACK_CHANNEL: "#test-bot" # Slack Channel name or ID
  SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }} # Slack API Token
  PROJECT_NAME: "PHP-CICD"
  ISSUE_ID: "5476"

jobs:
  php_build:
    name: Builds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Get file changes
        id: file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          githubToken: ${{ github.token }}
          output: ";"
      - name: Check if PHP image exist in registry
        id: is_php_image_exist
        uses: tm-bverret/docker-exist-action@v1.1.2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          image: ${{ env.PHP_IMAGE }}:latest
      - name: Publish PHP Image
        # In this if, remove the or if use github docker registry
        if: contains(steps.file_changes.outputs.files, 'docker/Dockerfile') || !((steps.is_php_image_exist.outputs.image_exist))
        uses: docker/build-push-action@v1.1.0
        with:
          name: ${{ env.PHP_IMAGE }}
          username: ${{env.DOCKER_USERNAME}}
          password: ${{env.DOCKER_PASSWORD}}
          registry: ${{env.DOCKER_REGISTRY}}
          cache_froms: ${{ env.PHP_IMAGE }}:latest
          dockerfile: docker/Dockerfile
          repository: ${{ env.PHP_IMAGE }}
          tag_with_sha: true
          tags: latest
      - name: Check if PHP Test image exist in registry
        id: is_php_test_image_exist
        uses: tm-bverret/docker-exist-action@v1.1.2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          image: ${{ env.PHP_TEST_IMAGE }}:latest
      - name: Publish PHP Test Image
        if: contains(steps.get_file_changes.outputs.files, 'docker/Test.Dockerfile') || !((steps.is_php_test_image_exist.outputs.image_exist)) || contains(steps.get_file_changes.outputs.files, 'docker/Dockerfile')
        uses: docker/build-push-action@v1.1.0
        with:
          name: ${{ env.PHP_TEST_IMAGE }}
          username: ${{env.DOCKER_USERNAME}}
          password: ${{env.DOCKER_PASSWORD}}
          registry: ${{env.DOCKER_REGISTRY}}
          cache_froms: ${{ env.PHP_IMAGE }}:latest,${{ env.PHP_TEST_IMAGE }}:latest
          dockerfile: docker/Test.Dockerfile
          repository: ${{ env.PHP_TEST_IMAGE }}
          build_args: base_image=${{env.DOCKER_REGISTRY}}/${{env.PHP_IMAGE}}:latest
          tag_with_sha: true
          tags: latest
      - name: Build Failure Handler
        if: failure()
        run: |
          curl --location --request POST 'https://slack.toumoro.com/github/${env.SLACK_CHANNEL}/${env.PROJECT_NAME}/${env.GITHUB_REF////%2F}/${env.GITHUB_RUN_ID}/build/error' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "status": [
                    {
                        "name": "Build",
                        "status": "FAIL"
                    },
                ],
                "issue_id": "${env.ISSUE_ID}",
                "github_actor": "${env.GITHUB_ACTOR}",
                "github_repository": "${env.GITHUB_REPOSITORY}"
            }'

  php_test:
    name: Tests
    runs-on: ubuntu-latest
    needs: ["php_build"]
    container: docker://docker.io/kerberosmorphy/gh-php-test:latest
      # Variable not working in container image name
      # https://github.community/t/how-to-use-env-with-container-image/17252
      # image: ${{ env.DOCKER_REGISTRY }}/${{ env.PHP_TEST_IMAGE }}:latest
      # Github PKG Docker not working in container section
      # image: docker://docker.pkg.github.com/tm-bverret/php_cicd/gh-php-test:latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unit Test
        run: |
          phpunit --bootstrap ./src/Calculator.php ./tests/CalculatorTest.php
          phpunit --bootstrap ./src/Email.php ./tests/EmailTest.php
      - name: Integration Test
        run: phpunit --bootstrap ./src/Music.php ./tests/MusicIntegrationTest.php
      - name: Functional Test
        run: phpunit --bootstrap ./src/Music.php ./tests/MusicFunctionalTest.php
      - name: Test Failure Handler
        if: failure()
        run: |
          curl --location --request POST 'https://slack.toumoro.com/github/${env.SLACK_CHANNEL}/${env.PROJECT_NAME}/${env.GITHUB_REF////%2F}/${env.GITHUB_RUN_ID}/tests/error' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "status": [
                    {
                        "name": "Build",
                        "status": "PASS"
                    },
                    {
                        "name": "Tests",
                        "status": "FAIL"
                    },
                ],
                "issue_id": "${env.ISSUE_ID}",
                "github_actor": "${env.GITHUB_ACTOR}",
                "github_repository": "${env.GITHUB_REPOSITORY}"
            }'

  php_deploy_request:
    name: Deploy Request
    runs-on: ubuntu-latest
    env:
      MESSAGE_TYPE: "REQUEST"
      TITLE: "GitHub Deploy Request"
      BUILD_STATUS: "PASS"
      TEST_STATUS: "PASS"
      WORKFLOW: "php-deploy-workflow.yml"
    needs: ["php_test"]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Slack Request
        run: |
          curl --location --request POST 'https://slack.toumoro.com/github/${env.SLACK_CHANNEL}/${env.PROJECT_NAME}/${env.GITHUB_REF////%2F}/${env.GITHUB_RUN_ID}/deploy/request' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "status": [
                    {
                        "name": "Build",
                        "status": "PASS"
                    },
                    {
                        "name": "Tests",
                        "status": "PASS"
                    },
                ],
                "issue_id": "${env.ISSUE_ID}",
                "workflow": "${env.WORKFLOW}",
                "github_actor": "${env.GITHUB_ACTOR}",
                "github_repository": "${env.GITHUB_REPOSITORY}"
            }'
      - name: Email Request
        run: echo "Execute Email Deploy Request script"
      - name: Hub Request
        run: echo "Execute Hub Deploy Request script"
